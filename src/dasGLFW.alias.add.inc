// this file is generated via daScript automatic C++ binder
// all user modifications will be lost after this file is re-generated

auto alias_GLFWglproc = typeFactory<void (*)()>::make(lib);
alias_GLFWglproc->alias = "GLFWglproc";
addAlias(alias_GLFWglproc);

auto alias_GLFWvkproc = typeFactory<void (*)()>::make(lib);
alias_GLFWvkproc->alias = "GLFWvkproc";
addAlias(alias_GLFWvkproc);

auto alias_GLFWerrorfun = typeFactory<void (*)(int, const char *)>::make(lib);
alias_GLFWerrorfun->alias = "GLFWerrorfun";
addAlias(alias_GLFWerrorfun);

auto alias_GLFWwindowposfun = typeFactory<void (*)(GLFWwindow *, int, int)>::make(lib);
alias_GLFWwindowposfun->alias = "GLFWwindowposfun";
addAlias(alias_GLFWwindowposfun);

auto alias_GLFWwindowsizefun = typeFactory<void (*)(GLFWwindow *, int, int)>::make(lib);
alias_GLFWwindowsizefun->alias = "GLFWwindowsizefun";
addAlias(alias_GLFWwindowsizefun);

auto alias_GLFWwindowclosefun = typeFactory<void (*)(GLFWwindow *)>::make(lib);
alias_GLFWwindowclosefun->alias = "GLFWwindowclosefun";
addAlias(alias_GLFWwindowclosefun);

auto alias_GLFWwindowrefreshfun = typeFactory<void (*)(GLFWwindow *)>::make(lib);
alias_GLFWwindowrefreshfun->alias = "GLFWwindowrefreshfun";
addAlias(alias_GLFWwindowrefreshfun);

auto alias_GLFWwindowfocusfun = typeFactory<void (*)(GLFWwindow *, int)>::make(lib);
alias_GLFWwindowfocusfun->alias = "GLFWwindowfocusfun";
addAlias(alias_GLFWwindowfocusfun);

auto alias_GLFWwindowiconifyfun = typeFactory<void (*)(GLFWwindow *, int)>::make(lib);
alias_GLFWwindowiconifyfun->alias = "GLFWwindowiconifyfun";
addAlias(alias_GLFWwindowiconifyfun);

auto alias_GLFWwindowmaximizefun = typeFactory<void (*)(GLFWwindow *, int)>::make(lib);
alias_GLFWwindowmaximizefun->alias = "GLFWwindowmaximizefun";
addAlias(alias_GLFWwindowmaximizefun);

auto alias_GLFWframebuffersizefun = typeFactory<void (*)(GLFWwindow *, int, int)>::make(lib);
alias_GLFWframebuffersizefun->alias = "GLFWframebuffersizefun";
addAlias(alias_GLFWframebuffersizefun);

auto alias_GLFWwindowcontentscalefun = typeFactory<void (*)(GLFWwindow *, float, float)>::make(lib);
alias_GLFWwindowcontentscalefun->alias = "GLFWwindowcontentscalefun";
addAlias(alias_GLFWwindowcontentscalefun);

auto alias_GLFWmousebuttonfun = typeFactory<void (*)(GLFWwindow *, int, int, int)>::make(lib);
alias_GLFWmousebuttonfun->alias = "GLFWmousebuttonfun";
addAlias(alias_GLFWmousebuttonfun);

auto alias_GLFWcursorposfun = typeFactory<void (*)(GLFWwindow *, double, double)>::make(lib);
alias_GLFWcursorposfun->alias = "GLFWcursorposfun";
addAlias(alias_GLFWcursorposfun);

auto alias_GLFWcursorenterfun = typeFactory<void (*)(GLFWwindow *, int)>::make(lib);
alias_GLFWcursorenterfun->alias = "GLFWcursorenterfun";
addAlias(alias_GLFWcursorenterfun);

auto alias_GLFWscrollfun = typeFactory<void (*)(GLFWwindow *, double, double)>::make(lib);
alias_GLFWscrollfun->alias = "GLFWscrollfun";
addAlias(alias_GLFWscrollfun);

auto alias_GLFWkeyfun = typeFactory<void (*)(GLFWwindow *, int, int, int, int)>::make(lib);
alias_GLFWkeyfun->alias = "GLFWkeyfun";
addAlias(alias_GLFWkeyfun);

auto alias_GLFWcharfun = typeFactory<void (*)(GLFWwindow *, unsigned int)>::make(lib);
alias_GLFWcharfun->alias = "GLFWcharfun";
addAlias(alias_GLFWcharfun);

auto alias_GLFWcharmodsfun = typeFactory<void (*)(GLFWwindow *, unsigned int, int)>::make(lib);
alias_GLFWcharmodsfun->alias = "GLFWcharmodsfun";
addAlias(alias_GLFWcharmodsfun);

auto alias_GLFWdropfun = typeFactory<void (*)(GLFWwindow *, int, const char **)>::make(lib);
alias_GLFWdropfun->alias = "GLFWdropfun";
addAlias(alias_GLFWdropfun);

auto alias_GLFWmonitorfun = typeFactory<void (*)(GLFWmonitor *, int)>::make(lib);
alias_GLFWmonitorfun->alias = "GLFWmonitorfun";
addAlias(alias_GLFWmonitorfun);

auto alias_GLFWjoystickfun = typeFactory<void (*)(int, int)>::make(lib);
alias_GLFWjoystickfun->alias = "GLFWjoystickfun";
addAlias(alias_GLFWjoystickfun);

